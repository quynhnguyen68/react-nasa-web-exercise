{"version":3,"sources":["components/Icon.js","page-components/GridList/index.js","utils/String.js","theme/index.js","theme/Image.js","utils/Image.js","utils/Item.js","reducers/searchItems.js","reducers/listItems.js","actions/index.js","actions/types.js","reducers/index.js","reducers/filter.js","store.js","components/Button/index.js","components/TextInput.js","components/Loader/index.js","components/Popup/index.js","components/TextArea.js","components/SelectOption/index.js","page-components/PageItem/index.js","page-components/SearchInput/index.js","page-components/OptionBoard/index.js","page-components/CommonPopup/index.js","page-components/FormPopup/index.js","navigator.js","selectors/item.js","page/MyListPage/index.js","page/SearchPage/index.js","AppNavigation.js","services/apis.js","App.js","serviceWorker.js","index.js"],"names":["Icon","props","imgClassName","more","Object","_Users_vquynhn_Documents_react_nasa_web_exercise_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","className","concat","alt","defaultProps","src","ItemList","_this$props","this","data","renderItem","react__WEBPACK_IMPORTED_MODULE_5___default","map","item","index","Component","defaultTypes","StringUtil","value","String","isString","date","currentDate","Date","getMonth","getDate","getFullYear","query","newQuery","split","length","indexOf","valid","i","theme","Image","DefaultImage","Edit","Delete","ActiveFavorite","Favorite","Search","Save","Close","Consider","Happy","Add","AddWhite","Checked","Back","Next","LikeWhite","Up","UpWhite","Down","DownWhite","ImageUtil","url","isStringAndNotEmpty","ItemUtil","items","_objectSpread","imageUrl","links","href","isFavorite","filter","SHOW_ALL","SHOW_FAVORITE","SHOW_ASC_DATE","SHOW_DESC_DATE","SHOW_ASC_TITLE","SHOW_DESC_TITLE","saveItemsList","type","rootReducer","combineReducers","state","arguments","undefined","action","toConsumableArray","id","listItems_objectSpread","searchItems","handleItemsList","searchItems_objectSpread","isAdded","middleWares","push","thunk","store","createStore","applyMiddleware","apply","Button","onClick","btnClassName","iconClassName","children","objectWithoutProperties","react_default","throttle","disabled","TextInput","inputClassName","onChange","onKeyDown","Loader","loaderClassName","Popup","isVisible","popupClassName","TextArea","name","placeholder","SelectOption","options","key","toString","lazy","Promise","resolve","then","__webpack_require__","bind","Item","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_toggleFavorite","assertThisInitialized","_onRemovePress","_onEditPress","_onAddPress","onToggleFavoriteItem","_this$props2","onRemoveItem","_this$props3","onAddItem","now","_this$props4","onEditItem","_this$props5","react","fallback","PageItem_Icon","isAvailableUrl","center","getDateFormat","date_created","title","description","components_Button","SearchInput","searchKey","_onTextChange","event","setState","target","onTextChange","keyCode","onPressSearch","components_TextInput","OptionBoard","showFavorite","sortOption","sortType","error","_toggleMyFavorite","_onOptionChange","_onTypeChange","onShowFavorite","onOptionChange","e","Number","forceUpdate","_this2","_this$state","components_SelectOption","CommonPopup","open","close","content","icon","onYesPress","showButton","components_Popup","FormPopup","selectedData","image","_selectedData","_onSavePress","info","newData","FormPopup_objectSpread","_this$state2","components_TextArea","_history","src_navigator","setHistory","history","navigate","routeName","params","pathname","location","goBack","getVisibleItems","createSelector","actionFilter","orderBy","MyListPage","filteredData","isShowFavorite","navigator","_items","getState","_onStoreChange","_removeItem","_editItem","_openRemovePopup","_openEditPopup","_onShowFavorite","unsubscribe","subscribe","_item","_removePopup","removeItem","_editPopup","editItem","MyListPage_objectSpread","checkAutoComplete","toLowerCase","option","filterItems","PageItem","filteredItems","page_components_SearchInput","page_components_OptionBoard","GridList","page_components_FormPopup","ref","popup","page_components_CommonPopup","MappedStoreComponent","connect","SearchPage","loading","_onPressSearch","_onAddItem","_handleGetListCallback","getItemsList","addItem","SearchPage_objectSpread","SearchPage_GridList","callback","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","_error$response","status","_data","wrap","_context","prev","next","axios","get","sent","collection","t0","stop","_x","AppNavigation","bootstrap","defaults","baseURL","headers","post","timeout","console","log","localStorage","getItem","JSON","parse","setItem","stringify","react_router_dom","basename","process","react_router","path","exact","component","App","es","src_AppNavigation","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d490fdc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../theme/Styles.scss';\n\nconst Icon = (props) => {\n  const { imgClassName, ...more } = props;\n  return (\n    <img\n        className={`image ${imgClassName}`}\n        {...more} alt=\"\" \n    />\n  );\n}\n\nIcon.propTypes = {\n    imgClassName: PropTypes.string,    \n    src: PropTypes.string,\n};\n\nIcon.defaultProps = {\n    imgClassName: \"\",\n    src: \"\",\n};\n\nexport default Icon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass ItemList extends Component {\n  static propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape),\n  }\n\n  static defaultTypes = {\n    data: [],\n  }\n\n  render() {\n    const { data, renderItem } = this.props;\n    return (\n      <div className=\"grid\">\n          {data.map((item, index) => {\n              return renderItem(item, index);\n          })}\n      </div>\n    );\n  }\n}\n\nexport default ItemList;\n","export default class StringUtil {\n  /**\n   * @param {any} value\n   */\n  static isString(value) {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  /**\n   * @param {any} value\n   */\n  static isStringAndNotEmpty(value) {\n    if (value && StringUtil.isString(value)) return true;\n    return false;\n  }\n\n  static getDateFormat(date){\n    if(!date) return '';\n    const months = [\"JAN\", \"FEB\", \"MAR\",\"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n    const currentDate = new Date(date);\n    const formattedDate =  months[currentDate.getMonth()] + \"-\" + currentDate.getDate() + \"-\" + currentDate.getFullYear()\n    return formattedDate;\n  }\n\n  static checkAutoComplete(item, query) {\n    const newQuery = query.split(' ');\n    if (!query || newQuery.length === 1) {\n      return item.indexOf(newQuery[0]) !== -1;\n    }\n    const { length } = newQuery;\n    let valid = item.indexOf(newQuery[0]) !== -1;\n    for (let i = 1; i < length; i++) {\n      valid = valid && item.indexOf(newQuery[i]) !== -1;\n    }\n    return valid;\n  }\n}\n","import Image from './Image';\n\nexport default {\n  Image,\n};\n","const Image = {\n    DefaultImage: 'images/default_image.png',\n    Edit: 'icon/edit.png',\n    Delete: 'icon/delete.png',\n    ActiveFavorite: 'icon/active_favorite.png',\n    Favorite: 'icon/favorite.png',\n    Search: 'icon/search.png',\n    Save: 'icon/save.png',\n    Close: 'icon/close.png',\n    Consider: 'icon/consider.png',\n    Happy: 'icon/happy.png',\n    Add: 'icon/add.png',\n    AddWhite: 'icon/add_white.png',\n    Checked: 'icon/checked.png',\n    Back:'icon/back.png',\n    Next:'icon/next.png',\n    LikeWhite: 'icon/like_white.png',\n    Up: 'icon/up.png',\n    UpWhite: 'icon/up_white.png',\n    Down: 'icon/down.png',\n    DownWhite: 'icon/down_white.png',\n};\n  \n  export default Image\n  ","import theme from '../theme';\nimport StringUtil from './String';\n\nexport default class ImageUtil {\n  static isAvailableUrl(url) {\n    if (!StringUtil.isStringAndNotEmpty(url)) { return theme.Image.DefaultImage; }\n    return url;\n  }\n}\n","export default class ItemUtil {\n  static handleItemsList(items) {\n    return items.map(item => ({\n      ...item.data && item.data[0],\n      imageUrl: item.links && item.links[0].href,\n      isFavorite: false,\n    }));\n  }\n}","import * as Types from '../actions/types';\nimport { ItemUtil } from 'utils';\n\nexport default function (state = [], action) {\n    switch (action.type) {\n      case Types.SAVE_SEARCH_ITEMS_LIST:\n        return ItemUtil.handleItemsList(action.items);\n      // case Types.UI_SA_GET_ITEMS_LIST:\n      case Types.RESET_ITEMS_LIST:\n        return [];\n      case Types.REMOVE_ITEM:\n        return state.map(item => (item.id === action.item.id) \n        ? { ...action.item, isAdded: false, isFavorite: false } : item);\n      default:\n        return state;\n    }\n  }\n  ","import * as Types from '../actions/types';\n\nexport default function (state = [], action) {\n    switch (action.type) {\n      case Types.SA_RE_SAVE_ITEMS_LIST:\n        return action.items;\n      case Types.ADD_ITEM:\n        return [...state, Object.assign({}, action.item)];\n      case Types.REMOVE_ITEM:\n        return state.filter(item => item.id !== action.item.id);\n      case Types.RESET_ITEMS_LIST:\n        return [];\n      case Types.EDIT_ITEM:\n          return state.map((item) => \n            (item.id !== action.item.id) ? item : { ...item, ...action.item });\n      default:\n        return state;\n    }\n  }\n  ","import * as Types from './types';\nimport axios from 'axios';\n\nexport const filter = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_FAVORITE: 'SHOW_FAVORITE',\n    SHOW_ASC_DATE: 'SHOW_ASC_DATE',\n    SHOW_DESC_DATE: 'SHOW_DESC_DATE',\n    SHOW_ASC_TITLE: 'SHOW_ASC_TITLE',\n    SHOW_DESC_TITLE: 'SHOW_DESC_TITLE'\n};\n\nexport const saveItemsList = items => ({\n    type: Types.SA_RE_SAVE_ITEMS_LIST,\n    items,\n});\n\nexport const saveSearchItemsList = items => ({\n    type: Types.SAVE_SEARCH_ITEMS_LIST,\n    items,\n})\n\nexport const addItem = (item) => ({\n    type: Types.ADD_ITEM,\n    item,\n});\n\nexport const editItem = item => ({\n    type: Types.EDIT_ITEM,\n    item,\n});\n\nexport const resetItemsList = () => ({\n    type: Types.RESET_ITEMS_LIST,\n});\n\nexport const removeItem = (item) => ({\n    type: Types.REMOVE_ITEM,\n    item,\n});\n\nexport const getItemsListStart = () => ({\n    type: Types.GET_ITEMS_LIST,\n});\n\nexport const getItemsListSuccess = () => ({\n    type: Types.GET_ITEMS_LIST_SUCCESS,\n});\n\nexport const getItemsListFail = error => ({\n    type: Types.GET_ITEMS_LIST_FAIL,\n    error\n});\n\nexport const getItemsList = (query, callback) => async dispatch => {\n    dispatch(getItemsListStart());\n    try {\n        const response  = await axios.get(`search?q=${query}`);\n        const { data } = response;\n        dispatch(saveSearchItemsList(data.collection.items));\n        callback(null);\n    } catch(error){\n        callback('Error');\n        const { status, data } = error.response;\n        dispatch(getItemsListFail({ status, data }));\n    }\n};\n\nexport const filterItems = filter => ({\n    type: Types.SET_VISIBILITY_FILTER,\n    filter,\n});","export const GET_ITEMS_LIST = 'GET_ITEMS_LIST';\nexport const SA_RE_SAVE_ITEMS_LIST = 'SA_RE_SAVE_ITEMS_LIST';\nexport const SAVE_SEARCH_ITEMS_LIST = 'SAVE_SEARCH_ITEMS_LIST';\nexport const ADD_ITEM = 'UI_RE_ADD_ITEM';\nexport const EDIT_ITEM = 'UI_RE_EDIT_ITEM';\nexport const REMOVE_ITEM = 'UI_RE_REMOVE_ITEM';\nexport const RESET_ITEMS_LIST = 'UI_RE_RESET_ITEMS_LIST';\n\nexport const GET_ITEMS_LIST_SUCCESS = 'GET_ITEMS_LIST_SUCCESS';\nexport const GET_ITEMS_LIST_FAIL = 'GET_ITEMS_LIST_FAIL';\n\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';","import { combineReducers } from 'redux';\nimport searchItems from './searchItems';\nimport items from './listItems';\nimport filter from './filter';\n\nconst rootReducer = combineReducers({\n  filter,\n  items,\n  searchItems,\n});\n  \nexport default rootReducer;\n  ","import * as Types from '../actions/types';\nimport { filter } from '../actions';\n\n/**\n * @param {any} state\n * @param {{ type: any; filter: any; }} action\n */\n\n export default function (state = filter.SHOW_ALL, action) {\n    switch(action.type) {\n        case Types.SET_VISIBILITY_FILTER:\n            return action.filter;\n        default: return state;\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleWares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const logger = createLogger();\n  middleWares.push(logger);\n}\n\nmiddleWares.push(thunk);\n\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { throttle } from 'lodash';\nimport './styles.scss';\n\nconst Button =  (props) => {\nconst { onClick, btnClassName, iconClassName, children, imageUrl, ...more } = props;\n  return (\n    <button \n        className={`button ${btnClassName}`}\n        onClick={throttle(onClick, 350)} \n        {...more}\n    >\n        {imageUrl && <img src={imageUrl} className={iconClassName} alt=\"\" />}\n        {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n    btnClassName: PropTypes.string,\n    imageUrl: PropTypes.string,\n    onClick: PropTypes.func,\n    iconClassName: PropTypes.string, \n    disabled: PropTypes.bool,\n    children: PropTypes.node,\n};\n\nButton.defaultProps = {\n    btnClassName: \"\",\n    imageUrl: \"\",\n    onClick: () => {},\n    iconClassName: \"\", \n    disabled: false,\n};\n\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../theme/Styles.scss';\n\nconst TextInput = (props) => {\n  const { inputClassName, onChange, onKeyDown, ...more } = props;\n  return (\n    <input\n      className={`text-input ${inputClassName}`}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      {...more}\n    />\n  );\n}\n \nTextInput.propTypes = {\n    inputClassName: PropTypes.string,\n    onChange: PropTypes.func,\n    onKeyDown: PropTypes.func,\n};\n\nTextInput.defaultProps = {\n    inputClassName: \"\",\n    onChange: () => {},\n    onKeyDown: () => {},\n};\n\nexport default TextInput;","import React from 'react';\nimport './styles.scss';\n\nexport default function (props) {\nconst { loaderClassName } = props;\n  return (\n    <div className={`loader ${loaderClassName}`}></div>\n  );\n}\n ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Popup = (props) => {\n  const { isVisible, children, popupClassName, ...more } = props;\n  return (\n    <div\n      className={isVisible ? `popup ${popupClassName}`: \"invisible\"}\n      {...more}\n    >\n        {children}\n    </div>\n  );\n}\n \nPopup.propTypes = {\n    isVisible: PropTypes.bool,\n};\nPopup.defaultProps = {\n    isVisible: false,\n};\n\nexport default Popup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../theme/Styles.scss';\n\nconst TextArea = (props) => {\n  const { inputClassName, onChange, onKeyDown, ...more } = props;\n  return (\n    <textarea\n      className={`text-input ${inputClassName}`}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      {...more}\n    />\n  );\n}\n \nTextArea.propTypes = {\n    name: PropTypes.string, \n    placeholder: PropTypes.string, \n    inputClassName: PropTypes.string,\n    onChange: PropTypes.func,\n    onKeyDown: PropTypes.func,\n};\n\nTextArea.defaultProps = {\n    name: \"\",\n    placeholder: \"\",\n    inputClassName: \"\",\n    onChange: () => {},\n    onKeyDown: () => {},\n};\n\nexport default TextArea;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../theme/Styles.scss';\nimport './styles.scss';\n\nconst SelectOption = (props) => {\n  const { options, onChange, ...more } = props;\n  return (\n    <select\n        className=\"select\" \n        onChange={onChange}\n        {...more}\n    >\n       {options && \n        options.map((item, index) => \n          <option key={index.toString()} value={item.value} className=\"option\">\n            {item.name}\n          </option>)}\n    </select>\n  );\n}\n\nSelectOption.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number\n  })),\n  onChange: PropTypes.func,\n};\n\nSelectOption.defaultProps = {\n  options: [],\n  onChange: () => {}\n};\n\nexport default SelectOption;","import React, { Component, Suspense, lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../components';\nimport theme from '../../theme';\nimport { ImageUtil, StringUtil } from '../../utils';\nimport '../../theme/Styles.scss';\nimport './styles.scss';\n\nconst Icon = lazy(() => import('../../components/Icon'));\n\nclass Item extends Component {\n    static propTypes = {\n      onEditItem: PropTypes.func,\n      onRemoveItem: PropTypes.func,\n      onAddItem: PropTypes.func,\n      onToggleFavoriteItem: PropTypes.func,\n      isFavorite: PropTypes.bool,\n      index: PropTypes.number,\n    }\n\n    static defaultTypes = {\n      onEditItem: () => {},\n      onRemoveItem: () => {},\n      onAddItem: () => {},\n      onToggleFavoriteItem: () => {},\n      isFavorite: false,\n      index: 0,\n    }\n    \n    constructor(props){\n      super(props);\n      this._toggleFavorite = this._toggleFavorite.bind(this);\n      this._onRemovePress = this._onRemovePress.bind(this);\n      this._onEditPress = this._onEditPress.bind(this);\n      this._onAddPress = this._onAddPress.bind(this);\n    }\n\n    _toggleFavorite(){  \n      const { data, onToggleFavoriteItem } = this.props;\n      onToggleFavoriteItem(data);\n    }\n\n    _onRemovePress(){\n      const { data, onRemoveItem } = this.props;\n      onRemoveItem(data);\n    }\n\n    _onAddPress(){\n      const { data, onAddItem } = this.props;\n      data.id = Date.now().toString();\n      onAddItem(data);\n    }\n\n    _onEditPress(){\n      const { data, onEditItem } = this.props;\n      onEditItem(data);\n    }\n\n    render(){\n        const { data, index, onAddItem } = this.props;\n        return (\n            <div className=\"item-container\" key={index.toString()}>\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Icon \n                    src={ImageUtil.isAvailableUrl(data.imageUrl)} \n                    imgClassName=\"shadow-item img-container\"\n                  />\n                </Suspense>\n                <div className=\"info-container\">\n                  <p>{data.center}</p>\n                  <p>{StringUtil.getDateFormat(data.date_created)}</p>\n                </div>\n                <h2>{data.title}</h2>\n                <div className=\"multiline-text txt-content\">\n                  {data.description}\n                </ div>\n                {!onAddItem ? \n                <div className=\"button-container\">\n                  <Button \n                    imageUrl={data.isFavorite ? theme.Image.ActiveFavorite : theme.Image.Favorite} \n                    onClick={this._toggleFavorite} \n                  />\n                  <Button \n                    imageUrl={theme.Image.Edit}\n                    btnClassName=\"button-edit\"\n                    onClick={this._onEditPress} \n                  />\n                  <Button \n                    imageUrl={theme.Image.Delete}\n                    onClick={this._onRemovePress} \n                  />\n                </div>\n                :\n                <Button\n                  imageUrl={data.isAdded ? theme.Image.Checked : theme.Image.Add}\n                  btnClassName={data.isAdded ? \"button-added\" : \"button-add\"}\n                  onClick={this._onAddPress}\n                  iconClassName=\"icon-add\" \n                  disabled={data.isAdded}\n                >\n                  <p>{data.isAdded ? \"Added\" : \"Add to collection\"}</p>\n                </Button>}\n            </div>\n        );\n    }\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, TextInput } from '../../components';\nimport theme from '../../theme';\nimport './styles.scss';\n\nclass SearchInput extends Component {\n    static propTypes = {\n        onEditItem: PropTypes.func,\n        onPressSearch: PropTypes.func,\n        onTextChange: PropTypes.func,\n      }\n  \n      static defaultTypes = {\n        onPressSearch: () => {},\n        onTextChange: () => {},\n      }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            searchKey: '',\n        };\n\n        this._onTextChange = this._onTextChange.bind(this);\n    }\n\n    _onTextChange(event){\n        this.setState({\n            searchKey: event.target.value,\n        });\n\n        if(this.props.onTextChange) \n            this.props.onTextChange(event.target.value);\n            \n        if(event.keyCode === 13){\n            this.props.onPressSearch(this.state.searchKey);\n        }\n    }\n\n    render(){\n        const { onPressSearch } = this.props;\n        const { searchKey } = this.state;\n        return(\n            <div className=\"container\">\n                <div className=\"search-container\">\n                    <TextInput\n                        name=\"searchKey\"\n                        inputClassName=\"input\"\n                        placeholder=\"Enter something\"\n                        onChange={this._onTextChange}\n                        onKeyDown={this._onTextChange}\n                    />\n                    <Button \n                        imageUrl={theme.Image.Search} \n                        onClick={() => onPressSearch(searchKey)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchInput;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, SelectOption } from '../../components';\nimport theme from '../../theme';\nimport '../../theme/Styles.scss';\nimport './styles.scss';\n\nconst options = [\n  {\n    value: 0,\n    name: 'Choose sort type',\n  },\n  {\n    value: 1,\n    name: 'Date',\n  },\n  {\n    value: 2,\n    name: 'Title',\n  },\n]\nclass OptionBoard extends Component {\n    static propTypes = {\n      onOptionChange: PropTypes.func,\n      onShowFavorite: PropTypes.func,\n    }\n\n    static defaultTypes = {\n      onShowFavorite: () => {},\n      onOptionChange: () => {},\n    }\n    \n    constructor(props){\n      super(props);\n      this.state = {\n        showFavorite: false,\n        sortOption: '',\n        sortType: options[0],\n        error: '',\n      }\n\n      this._toggleMyFavorite = this._toggleMyFavorite.bind(this);\n      this._onOptionChange = this._onOptionChange.bind(this);\n      this._onTypeChange = this._onTypeChange.bind(this);\n    }\n\n    _toggleMyFavorite(){\n      this.setState({\n        showFavorite: !this.state.showFavorite,\n      });\n      const { showFavorite } = this.state;\n      this.props.onShowFavorite(!showFavorite);\n    }\n\n    _onOptionChange(value){\n      if(this.state.sortType.value !== 0){\n        this.setState({\n          sortOption: value,\n          error: '',\n          showFavorite: false,\n        });\n        \n        this.props.onOptionChange(this.state.sortType, value);\n      } else {\n        this.setState({\n          sortOption: '',\n          error: 'Choose sort type first',\n        })\n      }\n    }\n\n    _onTypeChange(e){\n      this.setState({\n        sortType: options[Number(e.target.value)],\n        sortOption: e.target.value === '0' ? '' : this.state.sortOption,\n      });\n      this.forceUpdate();\n    }\n\n    render(){\n        const { showFavorite, sortOption, error } = this.state;\n        return (\n          <div className=\"option-container\">\n            <Button \n              btnClassName={`button-favorite ${showFavorite ? \"btn-show\": \"btn-hide\"}`}\n              imageUrl={showFavorite ? theme.Image.LikeWhite : theme.Image.Favorite} \n              onClick={this._toggleMyFavorite} \n            >\n              <p>My Favorite</p>\n            </Button>\n          \n            <SelectOption\n              options={options}\n              onChange={this._onTypeChange}\n            />\n\n            <Button \n              imageUrl={sortOption ==='up' ? theme.Image.UpWhite : theme.Image.Up}\n              btnClassName={`button-up ${sortOption ==='up' ? 'button-active': null}`}\n              onClick={() => this._onOptionChange('up')} \n            />\n            \n            <Button \n              imageUrl={sortOption ==='down' ? theme.Image.DownWhite : theme.Image.Down}\n              btnClassName={sortOption ==='down' ? 'button-active': null}\n              onClick={() => this._onOptionChange('down')} \n            />\n            {error && <div className=\"text-error\">{error}</div>}\n          </div>\n        );\n    }\n}\n\nexport default OptionBoard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Popup, Button } from '../../components';\nimport '../../theme/Styles.scss';\nimport './styles.scss';\n\nclass CommonPopup extends Component {\n    static propTypes = {\n      content: PropTypes.string,\n      showButton: PropTypes.bool,\n    }\n\n    static defaultTypes = {\n      content:\"\",\n      showButton: false,\n    }\n    \n    constructor(props){\n      super(props);\n      this.state = {\n        isVisible: false,\n      };\n\n      this.open = this.open.bind(this);\n      this.close = this.close.bind(this);\n    }\n\n    open(){\n        this.setState({\n            isVisible: true,\n        });\n    }\n\n    close(){\n        this.setState({\n            isVisible: false,\n        });\n    }\n\n    render(){\n        const { content, icon, onYesPress, showButton } = this.props;\n        const { isVisible } = this.state;\n        return (\n            <Popup\n                popupClassName=\"common-popup\"\n                isVisible={isVisible}\n            >\n                {icon && <Icon \n                    src={icon} \n                    imgClassName=\"icon\"\n                />}\n                <div className=\"text-content\">\n                  {content}\n                </ div>\n                {showButton && <div className=\"button-container btn-container\">\n                    <Button\n                       btnClassName=\"button-popup button-yes\"\n                       onClick={onYesPress} \n                    >\n                        <p>Confirm</p>\n                    </Button>\n                    <Button\n                       btnClassName=\"button-popup button-no\"\n                       onClick={this.close} \n                    >\n                        <p>Cancel</p>\n                    </Button>\n                </div>}\n            </Popup>\n        );\n    }\n}\n\nexport default CommonPopup;\n","// @ts-nocheck\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popup, Button, TextInput, TextArea } from '../../components';\nimport './styles.scss';\nimport theme from '../../theme';\nimport '../../theme/Styles.scss';\n\nclass FormPopup extends Component {\n    static propTypes = {\n        onYesPress: PropTypes.func,\n    }\n\n    static defaultTypes = {\n        onYesPress: () => {},\n    }\n    \n    constructor(props){\n      super(props);\n      this.state = {\n        isVisible: false,\n        selectedData: null,\n        image: '',\n        title: '',\n        center: '',\n        description: '',\n      };\n      this._selectedData = null;\n      this.open = this.open.bind(this);\n      this.close = this.close.bind(this);\n      this._onTextChange = this._onTextChange.bind(this);\n      this._onSavePress = this._onSavePress.bind(this);\n    }\n\n    open(info) {\n        this._selectedData = info;\n        this.setState({\n            isVisible: true,\n            image: info.imageUrl,\n            title: info.title,\n            center: info.center,\n            description: info.description,\n        });\n    }\n\n    close() {\n        this._selectedData = null;\n        this.setState({\n            isVisible: false,\n            image: '',\n            title: '',\n            center: '',\n            description: '',\n        });\n    }\n\n    _onTextChange(event) {\n        const { state } = this;\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    _onSavePress() {\n        const { image, title, center, description } = this.state;\n        if (this._selectedData){\n            const newData = {\n                ...this._selectedData,\n                title,\n                center,\n                description,\n                imageUrl: image,\n            };\n\n            this.props.onYesPress(newData);\n            this.close();\n        }\n    }\n\n    render(){\n        const { isVisible, image, title, center, description, error } = this.state;\n        return (\n            <Popup\n                popupClassName=\"form-popup\"\n                isVisible={isVisible}\n            >\n                <h2>Edit item</h2>\n                {error && <p>Please fill all fields</p>}\n                <div className=\"input-container\">\n                    <p>Title</p>\n                    <TextInput \n                        name=\"title\"\n                        inputClassName=\"input-form\"\n                        value={title}\n                        onChange={this._onTextChange}\n                        placeholder=\"Enter title\" \n                    />\n                </div>\n\n                <div className=\"input-container\">\n                    <p>Thumbnail image</p>\n                    <TextInput \n                        name=\"image\"\n                        inputClassName=\"input-form\"\n                        value={image} \n                        onChange={this._onTextChange}\n                        placeholder=\"Enter image url\"\n                    />\n                </div>\n\n                <div className=\"input-container\">\n                    <p>Center name</p>\n                    <TextInput \n                        type=\"text\"\n                        name=\"center\"\n                        inputClassName=\"input-form\"\n                        value={center} \n                        onChange={this._onTextChange}\n                        placeholder=\"Enter center name\"\n                    />\n                </div>\n\n                <div className=\"input-container\">\n                    <p>Description</p>\n                    <TextArea \n                        name=\"description\"\n                        inputClassName=\"input-form textarea-form\"\n                        value={description}\n                        onChange={this._onTextChange}\n                        placeholder=\"Enter description\"  \n                    />\n                </div>\n    \n                <div className=\"button-container\">\n                    <Button\n                        imageUrl={theme.Image.Save}\n                        btnClassName=\"button-save\"\n                        onClick={this._onSavePress} \n                    >\n                        <p>Save</p>\n                    </Button>\n                    <Button\n                        btnClassName=\"button-close\"\n                        imageUrl={theme.Image.Close}\n                        onClick={this.close} \n                    />\n                </div>\n            </Popup>\n        );\n    }\n}\n\nexport default FormPopup;\n","let _history;\n\nfunction setHistory(history) {\n  _history = history;\n}\n\nfunction navigate(routeName, params) {\n  const pathname = `/${routeName}`;\n  if (_history.location.pathname !== pathname) {\n    _history.push(pathname, params);\n  }\n}\n\nfunction goBack() {\n  _history.goBack();\n}\n\nexport default {\n  setHistory,\n  navigate,\n  goBack,\n};\n","import { createSelector } from 'reselect';\nimport { orderBy } from 'lodash';\nimport { filter as actionFilter } from 'actions';\n\nexport const itemSelector = state => state.items;\nexport const filterSelector = state => state.filter;\n\nexport const getVisibleItems = createSelector(\n    [ filterSelector, itemSelector ],\n    (filter, items) => {\n      switch (filter) {\n        case actionFilter.SHOW_ALL:\n            return items;\n        case actionFilter.SHOW_FAVORITE:\n            return items.filter(item => item.isFavorite);\n        case actionFilter.SHOW_ASC_DATE:\n            return orderBy(items, item => item.date_created, 'asc'); \n        case actionFilter.SHOW_DESC_DATE:\n            return orderBy(items, item => item.date_created, 'desc'); \n        case actionFilter.SHOW_ASC_TITLE:\n            return orderBy(items, item => item.title, 'asc'); \n        case actionFilter.SHOW_DESC_TITLE:\n            return orderBy(items, item => item.title, 'desc'); \n        default: return items;\n      }\n    }\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PageItem, GridList, SearchInput, \n  FormPopup, CommonPopup, OptionBoard } from '../../page-components';\nimport { Button } from '../../components';\nimport { removeItem, editItem, filterItems, filter } from 'actions';\nimport store from '../../store';\nimport navigator from '../../navigator';\nimport { StringUtil } from '../../utils';\nimport theme from '../../theme';\nimport { getVisibleItems } from '../../selectors/item';\nimport './styles.scss';\n\nclass MyListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedData: {},\n      filteredData: props.items || [],\n      isShowFavorite: false,\n      query: '',\n    };\n\n    navigator.setHistory(props.history);\n    this._items = store.getState().items;\n    this._onStoreChange = this._onStoreChange.bind(this);\n    this._removeItem = this._removeItem.bind(this);\n    this._editItem = this._editItem.bind(this);\n    this._openRemovePopup = this._openRemovePopup.bind(this);\n    this._openEditPopup = this._openEditPopup.bind(this);\n    this._toggleFavorite = this._toggleFavorite.bind(this);\n    this._onTextChange = this._onTextChange.bind(this);\n    this._onShowFavorite = this._onShowFavorite.bind(this);\n    this._onOptionChange = this._onOptionChange.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  componentDidMount(){\n    this.unsubscribe = store.subscribe(this._onStoreChange);\n  }\n\n  componentWillUnmount(){\n    this.unsubscribe();\n  }\n\n  _onStoreChange(){\n    const { items } = store.getState();\n    if(items){\n      this._item = items;\n      let filteredData;\n\n      if(this.state.isShowFavorite){\n        filteredData = items.filter(item => item.isFavorite);\n      } else {\n        filteredData = items;\n      }\n  \n      this.setState({\n        filteredData,\n      });\n    }\n  }\n  \n  _openRemovePopup(data){\n    this.setState({\n      selectedData: data,\n    });\n    this._removePopup.open();\n  }\n\n  _removeItem(){\n    const { removeItem } = this.props;\n    const { selectedData } = this.state;\n    this._removePopup.close();\n    removeItem(selectedData);\n    this.setState({\n      selectedData: {},\n    });\n  }\n\n  _openEditPopup(data){\n    this.setState({\n      selectedData: data,\n    });\n    this._editPopup.open(data);\n  }\n\n  _editItem(newData){\n    this.props.editItem(newData);\n    this.setState({\n      selectedData: {},\n    });\n  }\n\n  _toggleFavorite(data){\n      const newData = { ...data, isFavorite: !data.isFavorite }\n      this.props.editItem(newData);\n  }\n\n  _onTextChange(query){\n    const { items } = this.props;\n    const filteredData = items.filter(item => query === ''\n    || StringUtil.checkAutoComplete(item.title.toLowerCase(), query.toLowerCase())\n    || StringUtil.checkAutoComplete(item.description.toLowerCase(), query.toLowerCase()));\n\n    this.setState({\n      query,\n      filteredData,\n    });\n  }\n\n  _onOptionChange(type, option){\n    const { filterItems } = this.props;\n    let sortType;\n    switch(type.value){\n      case 0: sortType = ''; break;\n      case 1: sortType = 'DATE'; break;\n      case 2: sortType = 'TITLE'; break;\n      default: sortType = ''; break;\n    }\n\n    if(sortType && option){\n      filterItems(option ==='up' ? filter[`SHOW_ASC_${sortType}`] : filter[`SHOW_DESC_${sortType}`] );  \n    } else {\n      filterItems(filter.SHOW_ALL);\n    }\n  }\n\n  /**\n   * @param {boolean} isShowFavorite\n   */\n  _onShowFavorite(isShowFavorite){\n    const { filterItems } = this.props;\n    filterItems(isShowFavorite ? filter.SHOW_FAVORITE : filter.SHOW_ALL);\n  \n    this.setState({\n      isShowFavorite,\n    });\n  }\n\n  renderItem(item, index) {\n    return(\n      <PageItem \n        key={index.toString()}\n        index={index}\n        data={item}\n        onRemoveItem={this._openRemovePopup}\n        onEditItem={this._openEditPopup}\n        onToggleFavoriteItem={this._toggleFavorite}\n      />\n    );\n  }\n\n  render(){\n    const { filteredItems } = this.props;\n    return (\n      <div className=\"app\">\n        <h1>My NASA Collection</h1>\n        <SearchInput\n          onTextChange={this._onTextChange}\n          onPressSearch={this._onTextChange}\n        />\n\n        <OptionBoard\n          onShowFavorite={this._onShowFavorite}\n          onOptionChange={this._onOptionChange}\n        />\n\n        <GridList \n          data={filteredItems}\n          renderItem={this.renderItem}\n        />\n        <FormPopup \n          ref={(popup => { this._editPopup = popup})}\n          onYesPress={this._editItem}\n        />\n\n        <CommonPopup\n          ref={(popup => { this._removePopup = popup})}\n          icon={theme.Image.Consider} \n          content=\"Are you sure you want to delete this item?\"\n          showButton\n          onYesPress={this._removeItem}\n        />\n\n        <Button\n          imageUrl={theme.Image.AddWhite}\n          btnClassName={\"button-add button-to-search\"}\n          onClick={() => navigator.navigate('search')} \n        >\n          <p>Add new item</p>\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ filteredItems: getVisibleItems(state) });\nconst MappedStoreComponent = connect(\n  mapStateToProps,\n  { removeItem, editItem, filterItems },\n)(MyListPage);\n\nexport default MappedStoreComponent;\n\n","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { PageItem, SearchInput } from '../../page-components';\nimport { Loader, Button } from '../../components';\nimport { addItem, getItemsList } from'../../actions';\nimport navigator from '../../navigator';\nimport theme from '../../theme'\nimport './styles.scss';\n\nconst GridList = lazy(() => import('../../page-components/GridList'));\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n\n    navigator.setHistory(props.history);\n    this._onPressSearch = this._onPressSearch.bind(this);\n    this._onAddItem = this._onAddItem.bind(this);\n    this._handleGetListCallback = this._handleGetListCallback.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  _onPressSearch(searchKey){\n    if(searchKey) {\n        this.props.getItemsList(searchKey, this._handleGetListCallback);\n        this.setState({\n            loading: true,\n        });\n    }\n  }\n\n  _handleGetListCallback(error){\n    this.setState({\n        loading: false,\n    });\n  }\n\n  _onAddItem(data){\n    const { addItem } = this.props;\n    const newData = { \n      ...data,\n      isAdded: true,\n    }\n    Object.assign(data, newData);\n    addItem(newData);\n    this.forceUpdate();\n  }\n\n  renderItem(item, index) {\n    return(\n      <PageItem \n        key={index.toString()}\n        index={index}\n        data={item}\n        onAddItem={this._onAddItem}\n      />\n    );\n  }\n\n  render(){\n    const { searchItems } = this.props;\n    const { loading } = this.state;\n    return (\n      <Suspense fallback={<Loader loaderClassName=\"loader-container\"/>}>\n        <div className=\"app\">\n          <h1>Search from NASA</h1>\n          <SearchInput \n            onPressSearch={this._onPressSearch}\n          />\n          <GridList \n            data={searchItems}\n            renderItem={this.renderItem}\n          />\n          {loading && <Loader loaderClassName=\"loader-container\"/> }\n          <Button\n            imageUrl={theme.Image.Back}\n            btnClassName={\"button-add button-back\"}\n            onClick={() => navigator.goBack()} \n          >\n            <p>Back to list</p>\n          </Button>\n        </div>\n      </Suspense>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ searchItems: state.searchItems, items: state.items });\nconst MappedStoreComponent = connect(\n  mapStateToProps,\n  { addItem, getItemsList },\n)(SearchPage);\n\nexport default MappedStoreComponent;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MyListPage from './page/MyListPage';\nimport SearchPage from './page/SearchPage';\nimport { setup as setupApi } from './services/apis';\nimport { saveItemsList } from './actions';\nimport store from './store';\n\nclass AppNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this._onStoreChange = this._onStoreChange.bind(this);\n    this.bootstrap();\n  }\n\n  componentDidMount(){\n    setupApi();\n    this.unsubscribe = store.subscribe(this._onStoreChange);\n  }\n\n  async bootstrap() {\n    const items = await localStorage.getItem('items');\n    if(items) store.dispatch(saveItemsList(JSON.parse(items)));\n  }\n\n  componentWillUnmount(){\n    this.unsubscribe();\n  }\n\n  _onStoreChange(){\n    const { items } = store.getState();\n    if(items){\n      localStorage.setItem('items', JSON.stringify(items));\n    }\n  }\n\n  render(){\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/\" exact component={MyListPage} />\n            <Route path=\"/search\" component={SearchPage} />\n            <Route component={() => (<div>404 Not found </div>)} />\n          </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default AppNavigation;\n\n","import axios from 'axios';\n\nexport function setup() {\n  axios.defaults.baseURL = 'https://images-api.nasa.gov/';\n  axios.defaults.headers.post['Content-Type'] = 'application/json';\n  axios.defaults.timeout = 10000;\n  console.log('Axios has been setup');\n}\n\nexport function getItemList(query) {\n  return axios.get(`search?q=${query}`);\n}\n  ","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Navigation from './AppNavigation';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <Navigation />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}