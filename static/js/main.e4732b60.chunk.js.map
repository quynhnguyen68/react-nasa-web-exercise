{"version":3,"sources":["sagas/apis.js","actions/types.js","reducers/searchItems.js","reducers/index.js","reducers/listItems.js","store.js","actions/index.js","sagas/items.js","sagas/index.js","components/Icon.js","components/Button/index.js","components/TextInput.js","components/Loader/index.js","components/Popup/index.js","components/TextArea.js","components/SelectOption/index.js","theme/index.js","theme/Image.js","utils/String.js","utils/Image.js","page-components/PageItem/index.js","page-components/SearchInput/index.js","page-components/GridList/index.js","page-components/OptionBoard/index.js","page-components/CommonPopup/index.js","page-components/FormPopup/index.js","navigator.js","page/MyListPage/index.js","page/SearchPage/index.js","App.js","serviceWorker.js","index.js"],"names":["getItemList","query","axios","get","concat","then","response","catch","error","UI_SA_GET_ITEMS_LIST","rootReducer","combineReducers","items","state","arguments","length","undefined","action","type","push","item","remove","id","searchItems","map","Object","objectSpread","data","imageUrl","links","href","isFavourite","Types","isAdded","middlewares","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","apply","saveItemsList","saveSearchItemsList","watchGetItemListtRequest","_ref","regenerator_default","a","wrap","_context","prev","next","call","Apis","sent","callback","dispatch","collection","stop","_marked","_context2","takeEvery","_marked2","rootSaga","all","fork","sagas_marked","Icon","props","imgClassName","more","objectWithoutProperties","react_default","createElement","assign","className","alt","defaultProps","Button","onClick","btnClassName","iconClassName","children","throttle","src","TextInput","inputClassName","onChange","onKeyDown","Loader","loaderClassName","Popup","isVisible","popupClassName","TextArea","SelectOption","options","index","key","toString","value","name","theme","Image","DefaultImage","Edit","Delete","ActiveFavourite","Favourite","Search","Save","Close","Consider","Happy","Add","AddWhite","Checked","Back","Next","LikeWhite","Up","UpWhite","Down","DownWhite","StringUtil","String","isString","date","currentDate","Date","getMonth","getDate","getFullYear","newQuery","split","indexOf","valid","i","ImageUtil","url","isStringAndNotEmpty","Item","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","_toggleFavourite","bind","assertThisInitialized","_onRemovePress","_onEditPress","_onAddPress","_this$props","onToggleFavoriteItem","_this$props2","onRemoveItem","_this$props3","onAddItem","now","_this$props4","onEditItem","_this$props5","components_Icon","isAvailableUrl","loading","center","getDateFormat","date_created","title","description","components_Button","disabled","Component","defaultTypes","SearchInput","searchKey","_onTextChange","event","setState","target","onTextChange","keyCode","onPressSearch","components_TextInput","placeholder","ItemList","renderItem","OptionBoard","showFavourite","sortOption","sortType","_toggleMyFavourite","_onOptionChange","_onTypeChange","onShowFavourite","onOptionChange","e","Number","forceUpdate","_this2","_this$state","components_SelectOption","CommonPopup","open","close","content","icon","onYesPress","showButton","components_Popup","FormPopup","selectedData","image","_selectedData","_onSavePress","info","newData","_this$state2","components_TextArea","_history","src_navigator","setHistory","history","navigate","routeName","params","pathname","location","goBack","MyListPage","filteredData","isShowFavourite","navigator","_items","getState","_onStoreChange","_removeItem","_editItem","_openRemovePopup","_openEditPopup","_onShowFavourite","unsubscribe","subscribe","_item","filter","_removePopup","removeItem","_editPopup","editItem","tempData","toggleFavouriteItem","checkAutoComplete","toLowerCase","option","orderBy","PageItem","page_components_SearchInput","page_components_OptionBoard","GridList","page_components_FormPopup","ref","popup","page_components_CommonPopup","MappedStoreComponent","connect","SearchPage","_onPressSearch","_onAddItem","_handleGetListCallback","getItemsList","addItem","App","bootstrap","defaults","baseURL","headers","post","timeout","console","log","localStorage","getItem","JSON","parse","setItem","stringify","react_router_dom","react_router","path","exact","component","Boolean","window","hostname","match","run","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4732b60.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport function setup() {\r\n  axios.defaults.baseURL = 'https://images-api.nasa.gov/';\r\n  axios.defaults.headers.post['Content-Type'] = 'application/json';\r\n  axios.defaults.timeout = 10000;\r\n  console.log('Axios has been setup');\r\n}\r\n\r\nexport function getItemList(query) {\r\n    return axios.get(`search?q=${query}`)\r\n      .then(response => ({ response }))\r\n      .catch(error => ({ error }));\r\n}\r\n  ","export const UI_SA_GET_ITEMS_LIST = 'UI_SA_GET_ITEMS_LIST';\r\nexport const SA_RE_SAVE_ITEMS_LIST = 'SA_RE_SAVE_ITEMS_LIST';\r\nexport const SA_RE_SAVE_SEARCH_ITEMS_LIST = 'SA_RE_SAVE_SEARCH_ITEMS_LIST';\r\nexport const UI_RE_ADD_ITEM = 'UI_RE_ADD_ITEM';\r\nexport const UI_RE_RESET_ITEMS_LIST = 'UI_RE_RESET_ITEMS_LIST';\r\nexport const UI_RE_EDIT_ITEM = 'UI_RE_EDIT_ITEM';\r\nexport const UI_RE_TOGGLE_FAVOURITE_ITEM = 'UI_RE_TOGGLE_FAVOURITE_ITEM';\r\nexport const UI_RE_REMOVE_ITEM = 'UI_RE_REMOVE_ITEM';","import * as Types from '../actions/types';\r\n\r\nfunction handleItemsList(items) {\r\n  return items.map(item => ({\r\n    ...item.data && item.data[0],\r\n    imageUrl: item.links && item.links[0].href,\r\n    isFavourite: false,\r\n  }));\r\n}\r\nexport default function (state = [], action) {\r\n    switch (action.type) {\r\n      case Types.SA_RE_SAVE_SEARCH_ITEMS_LIST:\r\n        return handleItemsList(action.items);\r\n      case Types.UI_SA_GET_ITEMS_LIST:\r\n      case Types.UI_RE_RESET_ITEMS_LIST:\r\n        return [];\r\n      case Types.UI_RE_REMOVE_ITEM:\r\n        return state.map(item => (item.id === action.item.id) \r\n        ? { ...action.item, isAdded: false } : item);\r\n      case Types.UI_RE_ADD_ITEM:\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from 'redux';\r\nimport searchItems from './searchItems';\r\nimport items from './listItems';\r\n\r\nconst rootReducer = combineReducers({\r\n  items,\r\n  searchItems,\r\n});\r\n  \r\nexport default rootReducer;\r\n  ","import { remove } from 'lodash';\r\nimport * as Types from '../actions/types';\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type) {\r\n      case Types.SA_RE_SAVE_ITEMS_LIST:\r\n        return action.items;\r\n      case Types.UI_RE_ADD_ITEM:\r\n        state.push(action.item);\r\n        return state;\r\n      case Types.UI_RE_REMOVE_ITEM:\r\n        remove(state, item => item.id === action.item.id);\r\n        return state;\r\n      case Types.UI_RE_RESET_ITEMS_LIST:\r\n        return [];\r\n      case Types.UI_RE_TOGGLE_FAVOURITE_ITEM:\r\n      case Types.UI_RE_EDIT_ITEM:    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\n\r\nconst middlewares = [];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const logger = createLogger();\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\nmiddlewares.push(sagaMiddleware);\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import * as Types from './types';\r\n\r\nexport const getItemsList = (query, callback) => ({\r\n    type: Types.UI_SA_GET_ITEMS_LIST,\r\n    query,\r\n    callback,\r\n});\r\n\r\nexport const saveItemsList = items => ({\r\n    type: Types.SA_RE_SAVE_ITEMS_LIST,\r\n    items,\r\n});\r\n\r\nexport const saveSearchItemsList = items => ({\r\n    type: Types.SA_RE_SAVE_SEARCH_ITEMS_LIST,\r\n    items,\r\n})\r\n\r\nexport const toggleFavouriteItem = () => ({\r\n    type: Types.UI_RE_TOGGLE_FAVOURITE_ITEM,\r\n});\r\n\r\nexport const addItem = (item) => ({\r\n    type: Types.UI_RE_ADD_ITEM,\r\n    item,\r\n});\r\n\r\nexport const editItem = () => ({\r\n    type: Types.UI_RE_EDIT_ITEM,\r\n});\r\n\r\nexport const resetItemsList = () => ({\r\n    type: Types.UI_RE_RESET_ITEMS_LIST,\r\n});\r\n\r\nexport const removeItem = (item) => ({\r\n    type: Types.UI_RE_REMOVE_ITEM,\r\n    item,\r\n});","import { call, takeEvery } from 'redux-saga/effects';\r\nimport * as Apis from './apis';\r\nimport * as Types from '../actions/types';\r\nimport store from '../store';\r\nimport { saveSearchItemsList } from '../actions';\r\n\r\nfunction* getItemList(action) {\r\n    const { response, error } = yield call(Apis.getItemList, action.query);\r\n  \r\n    if(response){\r\n        action.callback(null);\r\n        store.dispatch(saveSearchItemsList(response.data.collection.items));\r\n    }\r\n\r\n    if(error) {\r\n        action.callback('Error');\r\n    }\r\n}\r\n  \r\nexport function* watchGetItemListtRequest() {\r\n    yield takeEvery(Types.UI_SA_GET_ITEMS_LIST, getItemList);\r\n}\r\n  ","import { all, fork } from 'redux-saga/effects';\r\nimport { watchGetItemListtRequest } from './items';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([ \r\n        fork(watchGetItemListtRequest),\r\n    ]);\r\n  }\r\n  \r\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../theme/Styles.scss';\r\n\r\nconst Icon = (props) => {\r\n  const { imgClassName, ...more } = props;\r\n  return (\r\n    <img\r\n        className={`image ${imgClassName}`}\r\n        {...more} alt=\"\" \r\n    />\r\n  );\r\n}\r\n\r\nIcon.propTypes = {\r\n    imgClassName: PropTypes.string,\r\n};\r\n\r\nIcon.defaultProps = {\r\n    imgClassName: \"\",\r\n};\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { throttle } from 'lodash';\r\nimport './styles.scss';\r\n\r\nconst Button =  (props) => {\r\nconst { onClick, btnClassName, iconClassName, children, imageUrl, ...more } = props;\r\n  return (\r\n    <button \r\n        className={`button ${btnClassName}`}\r\n        onClick={throttle(onClick, 350)} \r\n        {...more}\r\n    >\r\n        {imageUrl && <img src={imageUrl} className={iconClassName} alt=\"\" />}\r\n        {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n    btnClassName: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n    btnClassName: \"\",\r\n    imageUrl: \"\",\r\n    onClick: () => {},\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../theme/Styles.scss';\r\n\r\nconst TextInput = (props) => {\r\n  const { inputClassName, onChange, onKeyDown, ...more } = props;\r\n  return (\r\n    <input\r\n      className={`text-input ${inputClassName}`}\r\n      onChange={onChange}\r\n      onKeyDown={onKeyDown}\r\n      {...more}\r\n    />\r\n  );\r\n}\r\n \r\nTextInput.propTypes = {\r\n    inputClassName: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onKeyDown: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n    inputClassName: \"\",\r\n    onChange: () => {},\r\n    onKeyDown: () => {},\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport './styles.scss';\r\n\r\nexport default function (props) {\r\nconst { loaderClassName } = props;\r\n  return (\r\n    <div className={`loader ${loaderClassName}`}></div>\r\n  );\r\n}\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst Popup = (props) => {\r\n  const { isVisible, children, popupClassName, ...more } = props;\r\n  return (\r\n    <div\r\n      className={isVisible ? `popup ${popupClassName}`: \"invisible\"}\r\n      {...more}\r\n    >\r\n        {children}\r\n    </div>\r\n  );\r\n}\r\n \r\nPopup.propTypes = {\r\n    isVisible: PropTypes.bool,\r\n};\r\nPopup.defaultProps = {\r\n    isVisible: false,\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../theme/Styles.scss';\r\n\r\nconst TextArea = (props) => {\r\n  const { inputClassName, onChange, onKeyDown, ...more } = props;\r\n  return (\r\n    <textarea\r\n      className={`text-input ${inputClassName}`}\r\n      onChange={onChange}\r\n      onKeyDown={onKeyDown}\r\n      {...more}\r\n    />\r\n  );\r\n}\r\n \r\nTextArea.propTypes = {\r\n    inputClassName: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onKeyDown: PropTypes.func,\r\n};\r\n\r\nTextArea.defaultProps = {\r\n    inputClassName: \"\",\r\n    onChange: () => {},\r\n    onKeyDown: () => {},\r\n};\r\n\r\nexport default TextArea;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../theme/Styles.scss';\r\nimport './styles.scss';\r\n\r\nconst SelectOption = (props) => {\r\n  const { options, onChange, ...more } = props;\r\n  return (\r\n    <select\r\n        className=\"select\" \r\n        onChange={onChange}\r\n        {...more}\r\n    >\r\n       {options && \r\n        options.map((item, index) => \r\n          <option key={index.toString()} value={item.value} className=\"option\">\r\n            {item.name}\r\n          </option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nSelectOption.propTypes = {\r\n    imgClassName: PropTypes.string,\r\n};\r\n\r\nSelectOption.defaultProps = {\r\n    imgClassName: \"\",\r\n};\r\n\r\nexport default SelectOption;","import Image from './Image';\r\n\r\nexport default {\r\n  Image,\r\n};\r\n","const Image = {\r\n    DefaultImage: '/images/default_image.png',\r\n    Edit: '/icon/edit.png',\r\n    Delete: '/icon/delete.png',\r\n    ActiveFavourite: '/icon/active_favourite.png',\r\n    Favourite: '/icon/favourite.png',\r\n    Search: '/icon/search.png',\r\n    Save: '/icon/save.png',\r\n    Close: '/icon/close.png',\r\n    Consider: '/icon/consider.png',\r\n    Happy: '/icon/happy.png',\r\n    Add: '/icon/add.png',\r\n    AddWhite: '/icon/add_white.png',\r\n    Checked: '/icon/checked.png',\r\n    Back:'/icon/back.png',\r\n    Next:'/icon/next.png',\r\n    LikeWhite: '/icon/like_white.png',\r\n    Up: '/icon/up.png',\r\n    UpWhite: '/icon/up_white.png',\r\n    Down: '/icon/down.png',\r\n    DownWhite: '/icon/down_white.png',\r\n};\r\n  \r\n  export default Image\r\n  ","export default class StringUtil {\r\n  static isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  static isStringAndNotEmpty(value) {\r\n    if (value && StringUtil.isString(value)) return true;\r\n    return false;\r\n  }\r\n\r\n  static getDateFormat(date){\r\n    const months = [\"JAN\", \"FEB\", \"MAR\",\"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n    const currentDate = new Date(date);\r\n    const formattedDate =  months[currentDate.getMonth()] + \"-\" + currentDate.getDate() + \"-\" + currentDate.getFullYear()\r\n    return formattedDate;\r\n  }\r\n\r\n  static checkAutoComplete(item, query) {\r\n    const newQuery = query.split(' ');\r\n    if (!query || newQuery.length === 1) {\r\n      return item.indexOf(newQuery[0]) !== -1;\r\n    }\r\n    const { length } = newQuery;\r\n    let valid = item.indexOf(newQuery[0]) !== -1;\r\n    for (let i = 1; i < length; i++) {\r\n      valid = valid && item.indexOf(newQuery[i]) !== -1;\r\n    }\r\n    return valid;\r\n  }\r\n}\r\n","import theme from '../theme';\r\nimport StringUtil from './String';\r\n\r\nexport default class ImageUtil {\r\n  static isAvailableUrl(url) {\r\n    if (!StringUtil.isStringAndNotEmpty(url)) { return theme.Image.DefaultImage; }\r\n    return url;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, Button } from '../../components';\r\nimport theme from '../../theme';\r\nimport { ImageUtil, StringUtil } from '../../utils';\r\nimport '../../theme/Styles.scss';\r\nimport './styles.scss';\r\n\r\nclass Item extends Component {\r\n    static propTypes = {\r\n      onEditItem: PropTypes.func,\r\n      onRemoveItem: PropTypes.func,\r\n      onAddItem: PropTypes.func,\r\n      onToggleFavoriteItem: PropTypes.func,\r\n      isFavourite: PropTypes.bool,\r\n      index: PropTypes.number,\r\n    }\r\n\r\n    static defaultTypes = {\r\n      onEditItem: () => {},\r\n      onRemoveItem: () => {},\r\n      onAddItem: () => {},\r\n      onToggleFavoriteItem: () => {},\r\n      isFavourite: false,\r\n      index: 0,\r\n    }\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this._toggleFavourite = this._toggleFavourite.bind(this);\r\n      this._onRemovePress = this._onRemovePress.bind(this);\r\n      this._onEditPress = this._onEditPress.bind(this);\r\n      this._onAddPress = this._onAddPress.bind(this);\r\n    }\r\n\r\n    _toggleFavourite(){  \r\n      const { data, onToggleFavoriteItem } = this.props;\r\n      onToggleFavoriteItem(data);\r\n    }\r\n\r\n    _onRemovePress(){\r\n      const { data, onRemoveItem } = this.props;\r\n      onRemoveItem(data);\r\n    }\r\n\r\n    _onAddPress(){\r\n      const { data, onAddItem } = this.props;\r\n      data.id = Date.now().toString();\r\n      onAddItem(data);\r\n    }\r\n\r\n    _onEditPress(){\r\n      const { data, onEditItem } = this.props;\r\n      onEditItem(data);\r\n    }\r\n\r\n    render(){\r\n        const { data, index, onAddItem } = this.props;\r\n        return (\r\n            <div className=\"item-container\" key={index.toString()}>\r\n                <Icon \r\n                    src={ImageUtil.isAvailableUrl(data.imageUrl)} \r\n                    imgClassName=\"shadow-item img-container\"\r\n                    loading=\"lazy\" \r\n                 />\r\n                <div className=\"info-container\">\r\n                  <p>{data.center}</p>\r\n                  <p>{StringUtil.getDateFormat(data.date_created)}</p>\r\n                </div>\r\n                <h2>{data.title}</h2>\r\n                <div className=\"multiline-text txt-content\">\r\n                  {data.description}\r\n                </ div>\r\n                {!onAddItem ? \r\n                <div className=\"button-container\">\r\n                  <Button \r\n                    imageUrl={data.isFavourite ? theme.Image.ActiveFavourite : theme.Image.Favourite} \r\n                    onClick={this._toggleFavourite} \r\n                  />\r\n                  <Button \r\n                    imageUrl={theme.Image.Edit}\r\n                    btnClassName=\"button-edit\"\r\n                    onClick={this._onEditPress} \r\n                  />\r\n                  <Button \r\n                    imageUrl={theme.Image.Delete}\r\n                    onClick={this._onRemovePress} \r\n                  />\r\n                </div>\r\n                :\r\n                <Button\r\n                  imageUrl={data.isAdded ? theme.Image.Checked : theme.Image.Add}\r\n                  btnClassName={data.isAdded ? \"button-added\" : \"button-add\"}\r\n                  onClick={this._onAddPress}\r\n                  iconClassName=\"icon-add\" \r\n                  disabled={data.isAdded}\r\n                >\r\n                  <p>{data.isAdded ? \"Added\" : \"Add to collection\"}</p>\r\n                </Button>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, TextInput } from '../../components';\r\nimport theme from '../../theme';\r\nimport './styles.scss';\r\n\r\nclass SearchInput extends Component {\r\n    static propTypes = {\r\n        onEditItem: PropTypes.func,\r\n        onPressSearch: PropTypes.func,\r\n        onTextChange: PropTypes.func,\r\n      }\r\n  \r\n      static defaultTypes = {\r\n        onPressSearch: () => {},\r\n        onTextChange: () => {},\r\n      }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchKey: \"\",\r\n        };\r\n\r\n        this._onTextChange = this._onTextChange.bind(this);\r\n    }\r\n\r\n    _onTextChange(event){\r\n        this.setState({\r\n            searchKey: event.target.value,\r\n        });\r\n\r\n        if(this.props.onTextChange) \r\n            this.props.onTextChange(event.target.value);\r\n            \r\n        if(event.keyCode === 13){\r\n            this.props.onPressSearch(this.state.searchKey);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { onPressSearch } = this.props;\r\n        const { searchKey } = this.state;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"search-container\">\r\n                    <TextInput\r\n                        name=\"searchKey\"\r\n                        inputClassName=\"input\"\r\n                        placeholder=\"Enter something\"\r\n                        onChange={this._onTextChange}\r\n                        onKeyDown={this._onTextChange}\r\n                    />\r\n                    <Button \r\n                        imageUrl={theme.Image.Search} \r\n                        onClick={() => onPressSearch(searchKey)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nclass ItemList extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.shape),\r\n  }\r\n\r\n  static defaultTypes = {\r\n    data: [],\r\n  }\r\n\r\n  render() {\r\n    const { data, renderItem } = this.props;\r\n    return (\r\n      <div className=\"grid\">\r\n          {data.map((item, index) => {\r\n              return renderItem(item, index);\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, SelectOption } from '../../components';\r\nimport theme from '../../theme';\r\nimport '../../theme/Styles.scss';\r\nimport './styles.scss';\r\n\r\nconst options = [\r\n  {\r\n    value: 0,\r\n    name: 'Choose sort type',\r\n  },\r\n  {\r\n    value: 1,\r\n    name: 'Date',\r\n  },\r\n  {\r\n    value: 2,\r\n    name: 'Title',\r\n  },\r\n]\r\nclass OptionBoard extends Component {\r\n    static propTypes = {\r\n      onOptionChange: PropTypes.func,\r\n      onShowFavourite: PropTypes.func,\r\n    }\r\n\r\n    static defaultTypes = {\r\n      onShowFavourite: () => {},\r\n      onOptionChange: () => {},\r\n    }\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        showFavourite: false,\r\n        sortOption: '',\r\n        sortType: options[0],\r\n        error: '',\r\n      }\r\n\r\n      this._toggleMyFavourite = this._toggleMyFavourite.bind(this);\r\n      this._onOptionChange = this._onOptionChange.bind(this);\r\n      this._onTypeChange = this._onTypeChange.bind(this);\r\n    }\r\n\r\n    _toggleMyFavourite(){\r\n      this.setState({\r\n        showFavourite: !this.state.showFavourite,\r\n      });\r\n      const { showFavourite } = this.state;\r\n      this.props.onShowFavourite(!showFavourite);\r\n    }\r\n\r\n    _onOptionChange(value){\r\n      if(this.state.sortType.value !== 0){\r\n        this.setState({\r\n          sortOption: value,\r\n          error: '',\r\n          showFavourite: false,\r\n        });\r\n        \r\n        this.props.onOptionChange(this.state.sortType, value);\r\n      } else {\r\n        this.setState({\r\n          sortOption: '',\r\n          error: 'Choose sort type first',\r\n        })\r\n      }\r\n    }\r\n\r\n    _onTypeChange(e){\r\n      this.setState({\r\n        sortType: options[Number(e.target.value)],\r\n        sortOption: e.target.value === '0' ? '' : this.state.sortOption,\r\n      });\r\n      this.forceUpdate();\r\n    }\r\n\r\n    render(){\r\n        const { showFavourite, sortOption, error } = this.state;\r\n        return (\r\n          <div className=\"option-container\">\r\n            <Button \r\n              btnClassName={`button-favourite ${showFavourite ? \"btn-show\": \"btn-hide\"}`}\r\n              imageUrl={showFavourite ? theme.Image.LikeWhite : theme.Image.Favourite} \r\n              onClick={this._toggleMyFavourite} \r\n            >\r\n              <p>My Favourite</p>\r\n            </Button>\r\n          \r\n            <SelectOption\r\n              options={options}\r\n              onChange={this._onTypeChange}\r\n            />\r\n\r\n            <Button \r\n              imageUrl={sortOption ==='up' ? theme.Image.UpWhite : theme.Image.Up}\r\n              btnClassName={`button-up ${sortOption ==='up' ? 'button-active': null}`}\r\n              onClick={() => this._onOptionChange('up')} \r\n            />\r\n            \r\n            <Button \r\n              imageUrl={sortOption ==='down' ? theme.Image.DownWhite : theme.Image.Down}\r\n              btnClassName={sortOption ==='down' ? 'button-active': null}\r\n              onClick={() => this._onOptionChange('down')} \r\n            />\r\n            {error && <div className=\"text-error\">{error}</div>}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionBoard;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, Popup, Button } from '../../components';\r\nimport '../../theme/Styles.scss';\r\nimport './styles.scss';\r\n\r\nclass CommonPopup extends Component {\r\n    static propTypes = {\r\n      content: PropTypes.string,\r\n      showButton: PropTypes.bool,\r\n    }\r\n\r\n    static defaultTypes = {\r\n      content:\"\",\r\n      showButton: false,\r\n    }\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isVisible: false,\r\n      };\r\n\r\n      this.open = this.open.bind(this);\r\n      this.close = this.close.bind(this);\r\n    }\r\n\r\n    open(){\r\n        this.setState({\r\n            isVisible: true,\r\n        });\r\n    }\r\n\r\n    close(){\r\n        this.setState({\r\n            isVisible: false,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { content, icon, onYesPress, showButton } = this.props;\r\n        const { isVisible } = this.state;\r\n        return (\r\n            <Popup\r\n                popupClassName=\"common-popup\"\r\n                isVisible={isVisible}\r\n            >\r\n                {icon && <Icon \r\n                    src={icon} \r\n                    imgClassName=\"icon\"\r\n                />}\r\n                <div className=\"text-content\">\r\n                  {content}\r\n                </ div>\r\n                {showButton && <div className=\"button-container btn-container\">\r\n                    <Button\r\n                       btnClassName=\"button-popup button-yes\"\r\n                       onClick={onYesPress} \r\n                    >\r\n                        <p>Confirm</p>\r\n                    </Button>\r\n                    <Button\r\n                       btnClassName=\"button-popup button-no\"\r\n                       onClick={this.close} \r\n                    >\r\n                        <p>Cancel</p>\r\n                    </Button>\r\n                </div>}\r\n            </Popup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommonPopup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popup, Button, TextInput, TextArea } from '../../components';\r\nimport './styles.scss';\r\nimport theme from '../../theme';\r\nimport store from '../../store';\r\nimport '../../theme/Styles.scss';\r\n\r\nclass FormPopup extends Component {\r\n    static propTypes = {\r\n        onYesPress: PropTypes.func,\r\n    }\r\n\r\n    static defaultTypes = {\r\n        onYesPress: () => {},\r\n    }\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isVisible: false,\r\n        selectedData: null,\r\n        image: '',\r\n        title: '',\r\n        center: '',\r\n        description: '',\r\n      };\r\n      this._selectedData = null;\r\n      this.open = this.open.bind(this);\r\n      this.close = this.close.bind(this);\r\n      this._onTextChange = this._onTextChange.bind(this);\r\n      this._onSavePress = this._onSavePress.bind(this);\r\n    }\r\n\r\n    open(info) {\r\n        this._selectedData = info;\r\n        this.setState({\r\n            isVisible: true,\r\n            image: info.imageUrl,\r\n            title: info.title,\r\n            center: info.center,\r\n            description: info.description,\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this._selectedData = null;\r\n        this.setState({\r\n            isVisible: false,\r\n            image: '',\r\n            title: '',\r\n            center: '',\r\n            description: '',\r\n        });\r\n    }\r\n\r\n    _onTextChange(event) {\r\n        const { state } = this;\r\n        state[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    _onSavePress() {\r\n        const { image, title, center, description } = this.state;\r\n        if (this._selectedData){\r\n            const newData = {\r\n                ...this._selectedData,\r\n                title,\r\n                center,\r\n                description,\r\n                imageUrl: image,\r\n            };\r\n\r\n            this.props.onYesPress(newData);\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { isVisible, image, title, center, description, error } = this.state;\r\n        return (\r\n            <Popup\r\n                popupClassName=\"form-popup\"\r\n                isVisible={isVisible}\r\n            >\r\n                <h2>Edit item</h2>\r\n                {error && <p>Please fill all fields</p>}\r\n                <div className=\"input-container\">\r\n                    <p>Title</p>\r\n                    <TextInput \r\n                        name=\"title\"\r\n                        inputClassName=\"input-form\"\r\n                        value={title}\r\n                        onChange={this._onTextChange}\r\n                        placeholder=\"Enter title\" \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <p>Thumbnail image</p>\r\n                    <TextInput \r\n                        name=\"image\"\r\n                        inputClassName=\"input-form\"\r\n                        value={image} \r\n                        onChange={this._onTextChange}\r\n                        placeholder=\"Enter image url\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <p>Center name</p>\r\n                    <TextInput \r\n                        type=\"text\"\r\n                        name=\"center\"\r\n                        inputClassName=\"input-form\"\r\n                        value={center} \r\n                        onChange={this._onTextChange}\r\n                        placeholder=\"Enter center name\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <p>Description</p>\r\n                    <TextArea \r\n                        name=\"description\"\r\n                        inputClassName=\"input-form textarea-form\"\r\n                        value={description}\r\n                        onChange={this._onTextChange}\r\n                        placeholder=\"Enter description\"  \r\n                    />\r\n                </div>\r\n    \r\n                <div className=\"button-container\">\r\n                    <Button\r\n                        imageUrl={theme.Image.Save}\r\n                        btnClassName=\"button-save\"\r\n                        onClick={this._onSavePress} \r\n                    >\r\n                        <p>Save</p>\r\n                    </Button>\r\n                    <Button\r\n                        btnClassName=\"button-close\"\r\n                        imageUrl={theme.Image.Close}\r\n                        onClick={this.close} \r\n                    />\r\n                </div>\r\n            </Popup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormPopup;\r\n","let _history;\r\n\r\nfunction setHistory(history) {\r\n  _history = history;\r\n}\r\n\r\nfunction navigate(routeName, params) {\r\n  const pathname = `/${routeName}`;\r\n  if (_history.location.pathname !== pathname) {\r\n    _history.push(pathname, params);\r\n  }\r\n}\r\n\r\nfunction goBack() {\r\n  _history.goBack();\r\n}\r\n\r\nexport default {\r\n  setHistory,\r\n  navigate,\r\n  goBack,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { orderBy } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { PageItem, GridList, SearchInput, \r\n  FormPopup, CommonPopup, OptionBoard } from '../../page-components';\r\nimport { Button } from '../../components';\r\nimport { removeItem, toggleFavouriteItem, editItem } from'../../actions';\r\nimport store from '../../store';\r\nimport navigator from '../../navigator';\r\nimport { StringUtil } from '../../utils';\r\nimport theme from '../../theme';\r\nimport './styles.scss';\r\n\r\nclass MyListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedData: {},\r\n      filteredData: props.items || [],\r\n      isShowFavourite: false,\r\n      query: '',\r\n    };\r\n\r\n    navigator.setHistory(props.history);\r\n    this._items = store.getState().items;\r\n    this._onStoreChange = this._onStoreChange.bind(this);\r\n    this._removeItem = this._removeItem.bind(this);\r\n    this._editItem = this._editItem.bind(this);\r\n    this._openRemovePopup = this._openRemovePopup.bind(this);\r\n    this._openEditPopup = this._openEditPopup.bind(this);\r\n    this._toggleFavourite = this._toggleFavourite.bind(this);\r\n    this._onTextChange = this._onTextChange.bind(this);\r\n    this._onShowFavourite = this._onShowFavourite.bind(this);\r\n    this._onOptionChange = this._onOptionChange.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = store.subscribe(this._onStoreChange);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _onStoreChange(){\r\n    const { items } = store.getState();\r\n    if(items){\r\n      this._item = items;\r\n      let filteredData;\r\n\r\n      if(this.state.isShowFavourite){\r\n        filteredData = items.filter(item => item.isFavourite);\r\n      } else {\r\n        filteredData = items;\r\n      }\r\n  \r\n      this.setState({\r\n        filteredData,\r\n      });\r\n    }\r\n  }\r\n  \r\n  _openRemovePopup(data){\r\n    this.setState({\r\n      selectedData: data,\r\n    });\r\n    this._removePopup.open();\r\n  }\r\n\r\n  _removeItem(){\r\n    const { removeItem } = this.props;\r\n    const { selectedData } = this.state;\r\n    this._removePopup.close();\r\n    removeItem(selectedData);\r\n    this.setState({\r\n      selectedData: {},\r\n    });\r\n  }\r\n\r\n  _openEditPopup(data){\r\n    this.setState({\r\n      selectedData: data,\r\n    });\r\n    this._editPopup.open(data);\r\n  }\r\n\r\n  _editItem(newData){\r\n    Object.assign(this.state.selectedData, newData);\r\n    this.props.editItem();\r\n    this.forceUpdate();\r\n    this.setState({\r\n      selectedData: {},\r\n    });\r\n  }\r\n\r\n  _toggleFavourite(data){\r\n      const tempData = { ...data, isFavourite: !data.isFavourite }\r\n      Object.assign(data, tempData);\r\n      this.props.toggleFavouriteItem();\r\n      this.forceUpdate();\r\n  }\r\n\r\n  _onTextChange(query){\r\n    const { items } = this.props;\r\n    const filteredData = items.filter(item => query === ''\r\n    || StringUtil.checkAutoComplete(item.title.toLowerCase(), query.toLowerCase())\r\n    || StringUtil.checkAutoComplete(item.description.toLowerCase(), query.toLowerCase()));\r\n\r\n    this.setState({\r\n      query,\r\n      filteredData,\r\n    });\r\n  }\r\n\r\n  _onOptionChange(type, option){\r\n    const { items } = this.props;\r\n    let { filteredData } = this.state;\r\n    let sortType;\r\n    switch(type.value){\r\n      case 0: sortType = ''; break;\r\n      case 1: sortType = 'date_created'; break;\r\n      case 2: sortType = 'title'; break;\r\n      default: sortType = ''; break;\r\n    }\r\n\r\n    if(sortType && option){\r\n        filteredData = orderBy(items, item => item[sortType], \r\n          option ==='up' ? 'asc': 'desc');     \r\n    } else {\r\n      filteredData = items;\r\n    }\r\n    this.setState({\r\n      filteredData,\r\n    });\r\n  }\r\n\r\n  _onShowFavourite(isShowFavourite){\r\n    const { items } = this.props;\r\n    let { filteredData } = this.state;\r\n    if(isShowFavourite){\r\n      filteredData = items.filter(item => item.isFavourite);\r\n    } else {\r\n      filteredData = items;\r\n    }\r\n\r\n    this.setState({\r\n      isShowFavourite,\r\n      filteredData,\r\n    });\r\n  }\r\n\r\n  renderItem(item, index) {\r\n    return(\r\n      <PageItem \r\n        key={index.toString()}\r\n        index={index}\r\n        data={item}\r\n        onRemoveItem={this._openRemovePopup}\r\n        onEditItem={this._openEditPopup}\r\n        onToggleFavoriteItem={this._toggleFavourite}\r\n      />\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const { filteredData } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>My NASA Collection</h1>\r\n        <SearchInput\r\n          onTextChange={this._onTextChange}\r\n          onPressSearch={this._onTextChange}\r\n        />\r\n\r\n        <OptionBoard\r\n          onShowFavourite={this._onShowFavourite}\r\n          onOptionChange={this._onOptionChange}\r\n        />\r\n\r\n        <GridList \r\n          data={filteredData}\r\n          renderItem={this.renderItem}\r\n        />\r\n        <FormPopup \r\n          ref={(popup => { this._editPopup = popup})}\r\n          onYesPress={this._editItem}\r\n        />\r\n\r\n        <CommonPopup\r\n          ref={(popup => { this._removePopup = popup})}\r\n          icon={theme.Image.Consider} \r\n          content=\"Are you sure you want to delete this item?\"\r\n          showButton\r\n          onYesPress={this._removeItem}\r\n        />\r\n\r\n        <Button\r\n          imageUrl={theme.Image.AddWhite}\r\n          btnClassName={\"button-add button-to-search\"}\r\n          onClick={() => navigator.navigate('search')} \r\n        >\r\n          <p>Add new item</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ items: state.items });\r\nconst MappedStoreComponent = connect(\r\n  mapStateToProps,\r\n  { removeItem, toggleFavouriteItem, editItem },\r\n)(MyListPage);\r\n\r\nexport default MappedStoreComponent;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PageItem, GridList, SearchInput } from '../../page-components';\r\nimport { Loader, Button } from '../../components';\r\nimport { addItem, getItemsList } from'../../actions';\r\nimport navigator from '../../navigator';\r\nimport theme from '../../theme'\r\nimport './styles.scss';\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n    };\r\n\r\n    navigator.setHistory(props.history);\r\n    this._onPressSearch = this._onPressSearch.bind(this);\r\n    this._onAddItem = this._onAddItem.bind(this);\r\n    this._handleGetListCallback = this._handleGetListCallback.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n  }\r\n\r\n  _onPressSearch(searchKey){\r\n    if(searchKey) {\r\n        this.props.getItemsList(searchKey, this._handleGetListCallback);\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n    }\r\n  }\r\n\r\n  _handleGetListCallback(error){\r\n    this.setState({\r\n        loading: false,\r\n    });\r\n  }\r\n\r\n  _onAddItem(data){\r\n    const { addItem } = this.props;\r\n    const newData = { \r\n      ...data,\r\n      isAdded: true,\r\n    }\r\n    Object.assign(data, newData);\r\n    addItem(newData);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  renderItem(item, index) {\r\n    return(\r\n      <PageItem \r\n        key={index.toString()}\r\n        index={index}\r\n        data={item}\r\n        onAddItem={this._onAddItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const { searchItems } = this.props;\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Search from NASA</h1>\r\n        <SearchInput \r\n          onPressSearch={this._onPressSearch}\r\n        />\r\n        <GridList \r\n          data={searchItems}\r\n          renderItem={this.renderItem}\r\n        />\r\n        {loading && <Loader loaderClassName=\"loader-container\"/> }\r\n        <Button\r\n          imageUrl={theme.Image.Back}\r\n          btnClassName={\"button-add button-back\"}\r\n          onClick={() => navigator.goBack()} \r\n        >\r\n          <p>Back to list</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ searchItems: state.searchItems, items: state.items });\r\nconst MappedStoreComponent = connect(\r\n  mapStateToProps,\r\n  { addItem, getItemsList },\r\n)(SearchPage);\r\n\r\nexport default MappedStoreComponent;\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport MyListPage from './page/MyListPage';\r\nimport SearchPage from './page/SearchPage';\r\nimport { setup as setupApi } from './sagas/apis';\r\nimport { saveItemsList } from './actions';\r\nimport store from './store';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._onStoreChange = this._onStoreChange.bind(this);\r\n    this.bootstrap();\r\n  }\r\n\r\n  componentDidMount(){\r\n    setupApi();\r\n    this.unsubscribe = store.subscribe(this._onStoreChange);\r\n  }\r\n\r\n  async bootstrap() {\r\n    const items = await localStorage.getItem('items');\r\n    if(items) store.dispatch(saveItemsList(JSON.parse(items)));\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _onStoreChange(){\r\n    const { items } = store.getState();\r\n    if(items){\r\n      localStorage.setItem('items', JSON.stringify(items));\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={MyListPage} />\r\n            <Route path=\"/search\" component={SearchPage} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport rootSaga from './sagas';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store, { sagaMiddleware } from './store';\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n  \r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}